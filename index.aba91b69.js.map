{"mappings":"ACEA,IAAM,EAAO,SAAS,aAAa,CAAC,SAC9B,EAAS,SAAS,aAAa,CAAC,WAEtC,EAAK,gBAAgB,CAAC,QAAS,SAAC,CAAhC,EACE,EAAE,cAAc,GAEhB,IAAM,EAAW,EAAK,qBAAqB,GAErC,EAAe,EAAO,YAAY,CAClC,EAAc,EAAO,WAAW,CAChC,EAAc,SAAS,iBAAiB,GAAM,WAAW,EAE3D,EAAS,EAAE,OAAO,CAAG,EAAS,GAAG,CAAG,EAAe,EAAI,EACvD,EAAU,EAAE,OAAO,CAAG,EAAS,IAAI,CAAG,EAAc,EAAI,EAExD,EAAS,GACX,CAAA,EAAS,CAAA,EAGP,EAAS,EAAe,EAAS,MAAM,CAAG,EAAI,GAChD,CAAA,EAAS,EAAS,MAAM,CAAG,EAAe,EAAI,CADhD,EAII,EAAU,GACZ,CAAA,EAAU,CAAA,EAGR,EAAU,EAAc,EAAS,KAAK,CAAG,EAAI,GAC/C,CAAA,EAAU,EAAS,KAAK,CAAG,EAAc,EAAI,CAD/C,EAIA,EAAO,KAAK,CAAC,GAAG,CAAG,GAAU,MAAA,CAAP,EAAO,MAC7B,EAAO,KAAK,CAAC,IAAI,CAAG,GAAW,MAAA,CAAR,EAAQ,KACjC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar wall = document.querySelector(\".wall\");\nvar spider = document.querySelector(\".spider\");\nwall.addEventListener(\"click\", function(e) {\n    e.preventDefault();\n    var wallRect = wall.getBoundingClientRect();\n    var spiderHeight = spider.offsetHeight;\n    var spiderWidth = spider.offsetWidth;\n    var borderWidth = parseInt(getComputedStyle(wall).borderWidth);\n    var newTop = e.clientY - wallRect.top - spiderHeight / 2 - borderWidth;\n    var newLeft = e.clientX - wallRect.left - spiderWidth / 2 - borderWidth;\n    if (newTop < 0) newTop = 0;\n    if (newTop + spiderHeight > wallRect.height - 2 * borderWidth) newTop = wallRect.height - spiderHeight - 2 * borderWidth;\n    if (newLeft < 0) newLeft = 0;\n    if (newLeft + spiderWidth > wallRect.width - 2 * borderWidth) newLeft = wallRect.width - spiderWidth - 2 * borderWidth;\n    spider.style.top = \"\".concat(newTop, \"px\");\n    spider.style.left = \"\".concat(newLeft, \"px\");\n});\n\n//# sourceMappingURL=index.aba91b69.js.map\n","'use strict';\n\nconst wall = document.querySelector('.wall');\nconst spider = document.querySelector('.spider');\n\nwall.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  const wallRect = wall.getBoundingClientRect();\n\n  const spiderHeight = spider.offsetHeight;\n  const spiderWidth = spider.offsetWidth;\n  const borderWidth = parseInt(getComputedStyle(wall).borderWidth);\n\n  let newTop = e.clientY - wallRect.top - spiderHeight / 2 - borderWidth;\n  let newLeft = e.clientX - wallRect.left - spiderWidth / 2 - borderWidth;\n\n  if (newTop < 0) {\n    newTop = 0;\n  }\n\n  if (newTop + spiderHeight > wallRect.height - 2 * borderWidth) {\n    newTop = wallRect.height - spiderHeight - 2 * borderWidth;\n  }\n\n  if (newLeft < 0) {\n    newLeft = 0;\n  }\n\n  if (newLeft + spiderWidth > wallRect.width - 2 * borderWidth) {\n    newLeft = wallRect.width - spiderWidth - 2 * borderWidth;\n  }\n\n  spider.style.top = `${newTop}px`;\n  spider.style.left = `${newLeft}px`;\n});\n"],"names":["wall","document","querySelector","spider","addEventListener","e","preventDefault","wallRect","getBoundingClientRect","spiderHeight","offsetHeight","spiderWidth","offsetWidth","borderWidth","parseInt","getComputedStyle","newTop","clientY","top","newLeft","clientX","left","height","width","style","concat"],"version":3,"file":"index.aba91b69.js.map"}